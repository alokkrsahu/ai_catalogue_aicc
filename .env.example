# AI Catalogue Environment Configuration
# Copy this file to .env and update the values for your environment

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
DB_NAME=ai_catalogue_db
DB_USER=ai_catalogue_user
DB_PASSWORD=ai_catalogue_password
DB_HOST=postgres
DB_PORT=5432

# =============================================================================
# MILVUS VECTOR DATABASE CONFIGURATION
# =============================================================================
MILVUS_HOST=milvus
MILVUS_PORT=19530

# Milvus Authentication (Required for v2.6.0+)
MILVUS_ROOT_USER=milvusadmin
MILVUS_ROOT_PASSWORD=your_secure_milvus_password_here

# MinIO Configuration (Required for Milvus v2.6.0+)
MINIO_ROOT_USER=minioadmin
MINIO_ROOT_PASSWORD=your_secure_minio_password_here

# =============================================================================
# DJANGO CONFIGURATION
# =============================================================================
# Generate a new secret key for production: python -c "from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())"
DJANGO_SECRET_KEY=your-super-secret-key-change-in-production

# Set to False in production
DEBUG=True

# Comma-separated list of allowed hosts
ALLOWED_HOSTS=localhost,127.0.0.1,backend,frontend,nginx

# =============================================================================
# LLM API KEYS (Required for AI functionality)
# =============================================================================
# Google Gemini API for PDF/document processing
GOOGLE_API_KEY=your_google_api_key_here

# OpenAI API for content summarization and chat
OPENAI_API_KEY=your_openai_api_key_here

# Anthropic Claude API for advanced reasoning
ANTHROPIC_API_KEY=your_anthropic_api_key_here

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================
# Generate encryption keys: python -c "from cryptography.fernet import Fernet; print(Fernet.generate_key().decode())"
API_KEY_ENCRYPTION_KEY=BvAnyMC4-7_2oomBc_PT5lfmZN_LGisAdcvSF1EOAPQ=
PROJECT_API_KEY_ENCRYPTION_KEY=BvAnyMC4-7_2oomBc_PT5lfmZN_LGisAdcvSF1EOAPQ=

# =============================================================================
# PERFORMANCE OPTIMIZATION
# =============================================================================
# Disable tokenizer parallelism to prevent warnings
TOKENIZERS_PARALLELISM=false

# Enable MPS fallback for Apple Silicon
PYTORCH_ENABLE_MPS_FALLBACK=1

# Disable CUDA if not using GPU
CUDA_VISIBLE_DEVICES=

# =============================================================================
# FRONTEND CONFIGURATION
# =============================================================================
# Node environment
NODE_ENV=production

# Frontend port
FRONTEND_PORT=3000

# Backend API URL for server-side calls
BACKEND_URL=http://backend:8000

# =============================================================================
# NGINX CONFIGURATION
# =============================================================================
# Nginx port mappings
NGINX_HTTP_PORT=80
NGINX_HTTPS_PORT=443

# =============================================================================
# DEVELOPMENT CONFIGURATION
# =============================================================================
# Set to true to enable development containers with hot reload
DEVELOPMENT_MODE=false

# Frontend dev server port (only used in development)
FRONTEND_DEV_PORT=5173

# Backend dev server port (only used in development)  
BACKEND_DEV_PORT=8000