# AI Catalogue Environment Configuration Template
# Copy this file to .env and configure your values

# ===========================================
# DEPLOYMENT ENVIRONMENT
# ===========================================
ENVIRONMENT=development  # development, staging, production
DEPLOYMENT_PLATFORM=local  # local, azure, aws, gcp

# ===========================================
# DJANGO BACKEND CONFIGURATION
# ===========================================
DJANGO_SECRET_KEY=your-super-secret-key-change-in-production-make-it-long-and-random
DEBUG=True
DJANGO_SETTINGS_MODULE=core.settings

# Network & CORS Configuration (Cloud-Ready)
ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0
CORS_ALLOWED_ORIGINS=http://localhost:3000,http://localhost:5173,http://127.0.0.1:3000,http://127.0.0.1:5173
CORS_ALLOW_ALL_ORIGINS=False  # Set to True only for development
CSRF_TRUSTED_ORIGINS=http://localhost:3000,http://localhost:5173

# Backend Service Configuration
BACKEND_HOST=0.0.0.0
BACKEND_PORT=8000
BACKEND_URL=http://localhost:8000

# ===========================================
# DATABASE CONFIGURATION
# ===========================================
# PostgreSQL Configuration
DB_ENGINE=django.db.backends.postgresql
DB_NAME=ai_catalogue_db
DB_USER=ai_catalogue_user
DB_PASSWORD=ai_catalogue_password
DB_HOST=postgres  # Container name for local, FQDN for cloud
DB_PORT=5432
DB_SSL_MODE=prefer  # For cloud: require

# Database Connection Pool (for production)
DB_CONN_MAX_AGE=300
DB_CONN_HEALTH_CHECKS=True

# ===========================================
# MILVUS VECTOR DATABASE CONFIGURATION
# ===========================================
MILVUS_HOST=milvus  # Container name for local, FQDN for cloud
MILVUS_PORT=19530
MILVUS_USER=
MILVUS_PASSWORD=
MILVUS_DB_NAME=default
MILVUS_SECURE=False  # Set to True for cloud with TLS

# Milvus Collection Settings
MILVUS_COLLECTION_NAME=ai_catalogue_embeddings
MILVUS_DIMENSION=384  # Must match sentence transformer model
MILVUS_METRIC_TYPE=IP  # Inner Product
MILVUS_INDEX_TYPE=IVF_FLAT

# ===========================================
# OBJECT STORAGE CONFIGURATION (MinIO/Azure Blob)
# ===========================================
# For local development (MinIO)
MINIO_HOST=minio
MINIO_PORT=9000
MINIO_ROOT_USER=minioadmin
MINIO_ROOT_PASSWORD=minioadmin
MINIO_BUCKET_NAME=ai-catalogue-storage
MINIO_SECURE=False

# For Azure Blob Storage (when deploying to Azure)
AZURE_STORAGE_ACCOUNT_NAME=
AZURE_STORAGE_ACCOUNT_KEY=
AZURE_STORAGE_CONTAINER_NAME=ai-catalogue-storage

# For AWS S3 (when deploying to AWS)
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_STORAGE_BUCKET_NAME=ai-catalogue-storage
AWS_S3_REGION_NAME=us-west-2

# ===========================================
# AI API KEYS
# ===========================================
GOOGLE_API_KEY=
OPENAI_API_KEY=
ANTHROPIC_API_KEY=
HUGGINGFACE_API_KEY=

# ===========================================
# SECURITY CONFIGURATION
# ===========================================
# Encryption Keys (Generate new ones for production)
API_KEY_ENCRYPTION_KEY=BvAnyMC4-7_2oomBc_PT5lfmZN_LGisAdcvSF1EOAPQ=
PROJECT_API_KEY_ENCRYPTION_KEY=BvAnyMC4-7_2oomBc_PT5lfmZN_LGisAdcvSF1EOAPQ=

# JWT Configuration
JWT_SECRET_KEY=your-jwt-secret-key-change-in-production
JWT_ALGORITHM=HS256
JWT_ACCESS_TOKEN_LIFETIME=60  # minutes
JWT_REFRESH_TOKEN_LIFETIME=1440  # minutes (24 hours)

# ===========================================
# REDIS CONFIGURATION (for caching and sessions)
# ===========================================
REDIS_HOST=redis  # Container name for local, FQDN for cloud
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_DB=0
REDIS_URL=redis://redis:6379/0

# ===========================================
# LOGGING CONFIGURATION
# ===========================================
LOG_LEVEL=INFO  # DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_FORMAT=json  # json, text
LOG_TO_FILE=True
LOG_TO_CONSOLE=True

# Cloud Logging (Azure Monitor, AWS CloudWatch, GCP Cloud Logging)
AZURE_LOG_ANALYTICS_WORKSPACE_ID=
AZURE_LOG_ANALYTICS_SHARED_KEY=
AWS_CLOUDWATCH_LOG_GROUP=ai-catalogue
GCP_CLOUD_LOGGING_PROJECT_ID=

# ===========================================
# PERFORMANCE CONFIGURATION
# ===========================================
TOKENIZERS_PARALLELISM=false
PYTORCH_ENABLE_MPS_FALLBACK=1
CUDA_VISIBLE_DEVICES=
OMP_NUM_THREADS=4

# ===========================================
# FRONTEND CONFIGURATION
# ===========================================
NODE_ENV=development  # development, production
FRONTEND_PORT=3000
VITE_BACKEND_URL=http://localhost:8000
VITE_API_BASE_URL=http://localhost:8000/api

# ===========================================
# MONITORING & HEALTH CHECKS
# ===========================================
HEALTH_CHECK_ENABLED=True
HEALTH_CHECK_PATH=/health/
METRICS_ENABLED=True
METRICS_PATH=/metrics/

# Application Insights (Azure)
AZURE_APPLICATION_INSIGHTS_CONNECTION_STRING=

# ===========================================
# SCALING CONFIGURATION
# ===========================================
WORKER_PROCESSES=auto  # auto, or specific number
WORKER_CONNECTIONS=1000
MAX_REQUESTS_PER_WORKER=1000
WORKER_TIMEOUT=300

# Celery Configuration (for background tasks)
CELERY_BROKER_URL=redis://redis:6379/1
CELERY_RESULT_BACKEND=redis://redis:6379/2
CELERY_WORKER_CONCURRENCY=4